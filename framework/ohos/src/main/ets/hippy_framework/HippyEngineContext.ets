/*
 * Tencent is pleased to support the open source community by making
 * Hippy available.
 *
 * Copyright (C) 2022 THL A29 Limited, a Tencent company.
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { TimeMonitor } from '../support/utils/TimeMonitor';
import { VfsManager } from '../vfs/VfsManager';
import { HippyBridgeManager } from './bridge/HippyBridgeManager';
import { JsDriver } from './connector/JsDriver';
import { HippyGlobalConfigs } from './HippyGlobalConfigs';
import { HippyModuleManager } from './modules/HippyModuleManager';

export interface HippyEngineContext {

  getComponentName(): string

  // @Nullable
  // HashMap<String, Object> getNativeParams();

  getVfsManager(): VfsManager

  getJsDriver(): JsDriver

  getMonitor(): TimeMonitor

  getGlobalConfigs(): HippyGlobalConfigs

  getModuleManager(): HippyModuleManager

  getBridgeManager(): HippyBridgeManager

  // TODO
  // DevSupportManager getDevSupportManager();
  //
  // DevtoolsManager getDevtoolsManager();

  // ViewGroup getRootView();
  //
  // View getRootView(int rootId);
  //
  // @Nullable
  // View findViewById(int nodeId);

  // void addEngineLifecycleEventListener(HippyEngineLifecycleEventListener listener);
  //
  // void removeEngineLifecycleEventListener(HippyEngineLifecycleEventListener listener);
  //
  // void handleException(Throwable throwable);

  // int getEngineId();
  //
  getDomManagerId(): number;
  //
  getVfsId(): number;
  //
  // int getDevtoolsId();
  //
  onRuntimeInitialized(): void;
  //
  // void onBridgeDestroyed(boolean isReload, Throwable e);
  //
  // void onLoadModuleCompleted(ModuleLoadStatus statusCode, @Nullable String msg);
  //
  // void onLoadInstanceCompleted(long result, String reason);
}
